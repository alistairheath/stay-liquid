{"version":3,"sources":["../src/components/tabs/web.ts","../src/index.ts","../src/components/tabs/index.ts"],"sourcesContent":["import { WebPlugin } from \"@capacitor/core\";\nimport type {\n  TabsBarPlugin,\n  TabsBarConfigureOptions,\n  SelectOptions,\n  SetBadgeOptions,\n  SafeAreaInsets\n} from \"./definitions\";\n\nexport class TabsBarWeb extends WebPlugin implements TabsBarPlugin {\n  async configure(_: TabsBarConfigureOptions): Promise<void> { /* no-op */ }\n  async show(): Promise<void> {}\n  async hide(): Promise<void> {}\n  async select(_: SelectOptions): Promise<void> {}\n  async setBadge(_: SetBadgeOptions): Promise<void> {}\n  async getSafeAreaInsets(): Promise<SafeAreaInsets> {\n    return { top: 0, bottom: 0, left: 0, right: 0 };\n  }\n}","/**\n * Unified entry for all native overlay components.\n * Currently exports: TabsBar\n */\n\nexport { TabsBar } from \"./components/tabs\";\nexport type {\n  TabsBarPlugin,\n  TabsBarConfigureOptions,\n  TabItem,\n  SafeAreaInsets,\n  SetBadgeOptions,\n  SelectOptions,\n  BadgeValue\n} from \"./components/tabs/definitions\";","import { registerPlugin } from \"@capacitor/core\";\nimport type { TabsBarPlugin } from \"./definitions\";\n\nexport * from \"./definitions\";\n\n/** Named export for the TabsBar plugin within the larger library */\nexport const TabsBar = registerPlugin<TabsBarPlugin>(\"TabsBar\", {\n  web: () => import(\"./web\").then(m => new m.TabsBarWeb()),\n});"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,iBASa;AATb;AAAA;AAAA;AAAA,kBAA0B;AASnB,IAAM,aAAN,cAAyB,sBAAmC;AAAA,MACjE,MAAM,UAAU,GAA2C;AAAA,MAAc;AAAA,MACzE,MAAM,OAAsB;AAAA,MAAC;AAAA,MAC7B,MAAM,OAAsB;AAAA,MAAC;AAAA,MAC7B,MAAM,OAAO,GAAiC;AAAA,MAAC;AAAA,MAC/C,MAAM,SAAS,GAAmC;AAAA,MAAC;AAAA,MACnD,MAAM,oBAA6C;AACjD,eAAO,EAAE,KAAK,GAAG,QAAQ,GAAG,MAAM,GAAG,OAAO,EAAE;AAAA,MAChD;AAAA,IACF;AAAA;AAAA;;;AClBA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA,eAA+B;AAMxB,IAAM,cAAU,6BAA8B,WAAW;AAAA,EAC9D,KAAK,MAAM,wDAAgB,KAAK,OAAK,IAAI,EAAE,WAAW,CAAC;AACzD,CAAC;","names":["import_core"]}